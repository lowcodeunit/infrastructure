name: Build Prerelease

on:
  push:
    branches:
    - 'integration'
    - 'feature/**'
  pull_request:
    branches:
    - 'integration'

jobs:
  build:
    name: Build and Publish
    runs-on: ubuntu-latest
    steps:
    # checkout repository
    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'

    # set branch name variable
    - name: Set branch name variable
      id: vars
      run: echo ::set-output name=branchName::${GITHUB_REF##*/}
      
    - name: Echo current branch
      run: echo "The current branch is ${{ steps.vars.outputs.branchName }}"            

    # bump version and push tag
    - name: Bump version and push tag
      uses: anothrNick/github-tag-action@1.26.0
      id: versionBump
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        RELEASE_BRANCHES: integration,feature*
        DEFAULT_BUMP: patch
        WITH_V: false
    - run: echo "The new version is ${{ steps.versionBump.outputs.new_tag }}"

    # replace text in package.json
    - name: replace tag text
      shell: pwsh
      run: (Get-Content -path package.json -Raw) -replace "--access public","--access public --tag ${{ steps.vars.outputs.branchName }}" | Set-Content -Path package.json

    - name: replace version text
      shell: pwsh
      run: (Get-Content -path package.json -Raw) -replace "version patch","version ${{ steps.versionBump.outputs.new_tag }}-${{ steps.vars.outputs.branchName }} --no-git-tag-version -f" | Set-Content -Path package.json

    # run npm commands
    - uses: actions/setup-node@v2
      with:
        node-version: 12
        registry-url: 'https://registry.npmjs.org'

    # install npm dependencies from package-lock.json
    - name: npm install
      run: npm ci

    # build & publish npm packages to npmjs.org
    - name: npm build & publish
      if: ${{ steps.versionBump.outputs.new_tag != '' }}
      run: npm run deploy
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
